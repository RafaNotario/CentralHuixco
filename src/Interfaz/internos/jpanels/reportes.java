/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz.internos.jpanels;

import Controller.controlInserts;
import Controller.datesControl;
import Controller.funciones;
import conexion.ConexionDBOriginal;
import java.awt.Desktop;
import java.awt.Rectangle;
import java.io.File;
import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import renderTable.TModel;
import tickets.Jasper.Reportes;


public class reportes extends javax.swing.JPanel {

    datesControl datCtrl = new datesControl();
    ConexionDBOriginal con2 = new ConexionDBOriginal();
    controlInserts contrl = new controlInserts();
    funciones func = new funciones();
    Reportes rP = new Reportes();
    
    String[] cabAreasPays = {"# Ticket", "Hora", "Concepto", "Nombre", "Monto"},
            cabGastCajas = {"#Folio", "Hora", "Concepto", "Importe"};
    String[] arrAreas = {"Mant. semanal","Basura semanal","Policia semanal","Resguardo semanal"};//2,3,4,5
    String[] arrAmbus = {"Semana Ambulantes","Resguardo Ambulantes","Inscripcion Ambulantes"};// 6,7,8,9
    String[] arrCargad = {"Semana cargadores","Inscripción Anual","Renta diaria de diablo"};// 8,9,11,12
    String[] arrOtros = {"VARIOS","FERTILIZANTE","RENTA DE ESPACIOS","EXPLANADA","BAÑOS","CREDENCIALES"};// 1,2,3,4,5,6 otros_rubros
    
    List<String> idCajeros = new ArrayList<String>();
    List<String> idGastosEg = new ArrayList<String>();

    
    String[] semanaAct = null;
    
    String buscarTurn ="0";
    public reportes() {
        initComponents();
        
        llenacombCajeros();//llenamos el combo con nombre de cajeros 
        jCalendar1.setMaxSelectableDate(datCtrl.cargafecha());
        llenacombEgresos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialCalendarMantenim = new javax.swing.JDialog();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jButton42 = new javax.swing.JButton();
        jDialFechonas = new javax.swing.JDialog();
        jButton8 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jRadioEspedific = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabViewTurnos = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabDetailTurnos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jCmbBCajeros = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabViewFolio = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jCmBoxIdCancel = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabTurnCancel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTabViewIngresosAll = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCBoxEsIngreso = new javax.swing.JComboBox<>();
        jCBoxEsRubroDet = new javax.swing.JComboBox<>();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jButton16 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabLetrero = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jProgressBar2 = new javax.swing.JProgressBar();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jCmBoxEgresos = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton9 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabTOTEGRESOS = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        jDialCalendarMantenim.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialCalendarMantenim.setTitle("Elija semana");
        jDialCalendarMantenim.setResizable(false);
        jDialCalendarMantenim.setSize(new java.awt.Dimension(450, 300));
        jDialCalendarMantenim.setType(java.awt.Window.Type.UTILITY);

        jCalendar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jCalendar1.setDecorationBordersVisible(true);
        jCalendar1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jButton42.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton42.setText("Seleccionar");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialCalendarMantenimLayout = new javax.swing.GroupLayout(jDialCalendarMantenim.getContentPane());
        jDialCalendarMantenim.getContentPane().setLayout(jDialCalendarMantenimLayout);
        jDialCalendarMantenimLayout.setHorizontalGroup(
            jDialCalendarMantenimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialCalendarMantenimLayout.createSequentialGroup()
                .addGroup(jDialCalendarMantenimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialCalendarMantenimLayout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialCalendarMantenimLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jDialCalendarMantenimLayout.setVerticalGroup(
            jDialCalendarMantenimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialCalendarMantenimLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDialFechonas.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialFechonas.setSize(new java.awt.Dimension(456, 300));

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/uicheckOk.png"))); // NOI18N
        jButton8.setText("Aceptar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        jButton12.setText("Cancelar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        buttonGroup1.add(jRadioEspedific);
        jRadioEspedific.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioEspedific.setText("Fecha Especifica");
        jRadioEspedific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioEspedificActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton2.setText("Lapso de Fechas");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel13.setText("Fecha de Inicio");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel14.setText("Fecha de Fin");

        jDateChooser2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jDialFechonasLayout = new javax.swing.GroupLayout(jDialFechonas.getContentPane());
        jDialFechonas.getContentPane().setLayout(jDialFechonasLayout);
        jDialFechonasLayout.setHorizontalGroup(
            jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialFechonasLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialFechonasLayout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jDialFechonasLayout.createSequentialGroup()
                            .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioEspedific, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                            .addGap(10, 10, 10)
                            .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jDialFechonasLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jDialFechonasLayout.setVerticalGroup(
            jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialFechonasLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jRadioEspedific, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jDialFechonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jSplitPane1.setDividerLocation(650);
        jSplitPane1.setResizeWeight(0.5);

        jTabViewTurnos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTabViewTurnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Turno", "Cajero", "Inicio", "Finalizado", "Duracion"
            }
        ));
        jTabViewTurnos.setRowHeight(25);
        jTabViewTurnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabViewTurnosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTabViewTurnos);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel5);

        jTabDetailTurnos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTabDetailTurnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#Ticket", "Hora", "Concepto", "Nombre"
            }
        ));
        jTabDetailTurnos.setRowHeight(25);
        jTabDetailTurnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabDetailTurnosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabDetailTurnos);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jPanel6);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Cajero(a):");

        jCmbBCajeros.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jCmbBCajeros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBCajerosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Turno:");

        jLabViewFolio.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabViewFolio.setText("---");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Cobros");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Salidas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Re- Imprimir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setText("Esta Semana");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setText("Otra semana");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSplitPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCmbBCajeros, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabViewFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(jCmbBCajeros, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(jLabViewFolio, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(254, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Corte de caja", new javax.swing.ImageIcon(getClass().getResource("/images/caja-registradora.png")), jPanel1); // NOI18N

        jSplitPane2.setDividerLocation(650);
        jSplitPane2.setResizeWeight(0.5);

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setRowHeight(25);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        jSplitPane2.setLeftComponent(jPanel7);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel8);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Cuenta:");

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton10.setText("Esta Semana");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton11.setText("Otra Semana");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Turno:");

        jLabTurnCancel.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        jLabTurnCancel.setText("--");
        jLabTurnCancel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCmBoxIdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabTurnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCmBoxIdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabTurnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );

        jTabbedPane1.addTab("Cancelaciones", new javax.swing.ImageIcon(getClass().getResource("/images/exit.png")), jPanel2); // NOI18N

        jTabViewIngresosAll.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTabViewIngresosAll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#Ticket", "Fecha", "Hora", "Concepto", "Semana", "Nombre"
            }
        ));
        jTabViewIngresosAll.setRowHeight(25);
        jScrollPane5.setViewportView(jTabViewIngresosAll);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Ingreso");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Rubro");

        jCBoxEsIngreso.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jCBoxEsIngreso.setMaximumRowCount(6);
        jCBoxEsIngreso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Areas", "Ambulantes", "Cargadores", "Transito", "Varios" }));
        jCBoxEsIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxEsIngresoActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("<html>\nPor fecha <br>\nde cobro.\n</html>");
        jLabel9.setAutoscrolls(true);

        jButton13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconfinder_Week_132165.png"))); // NOI18N
        jButton13.setText("Semana");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconfinder_office-calendar_118811.png"))); // NOI18N
        jButton14.setText("Fecha");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excelicon.png"))); // NOI18N
        jButton16.setText("Excel");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabLetrero.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabLetrero.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Registros:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("TOTAL $:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCBoxEsIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBoxEsRubroDet, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(jLabLetrero, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(77, 77, 77)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1097, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCBoxEsIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCBoxEsRubroDet, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabLetrero, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jProgressBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(204, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ingresos", new javax.swing.ImageIcon(getClass().getResource("/images/dinero-cobros.png")), jPanel3); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Egreso");

        jCmBoxEgresos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos" }));
        jCmBoxEgresos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmBoxEgresosActionPerformed(evt);
            }
        });

        jTable6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Folio", "Fecha", "Hora", "Rubro", "Concepto", "Cajero"
            }
        ));
        jTable6.setColumnSelectionAllowed(true);
        jTable6.setRowHeight(25);
        jScrollPane6.setViewportView(jTable6);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel7.setText("<html>\nPor fecha <br> de registro\n</html>");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconfinder_Week_132165.png"))); // NOI18N
        jButton6.setText("Semana");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconfinder_office-calendar_118811.png"))); // NOI18N
        jButton7.setText("Fecha");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excelicon.png"))); // NOI18N
        jButton9.setText("Guardar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Registros:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("TOTAL $:");

        jLabTOTEGRESOS.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabTOTEGRESOS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jProgressBar1.setStringPainted(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCmBoxEgresos, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9)
                        .addGap(91, 91, 91)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1097, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabTOTEGRESOS, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(254, 254, 254))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCmBoxEgresos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator1)))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabTOTEGRESOS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(236, 236, 236))
        );

        jTabbedPane1.addTab("Egresos", new javax.swing.ImageIcon(getClass().getResource("/images/nomina.png")), jPanel4); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCmbBCajerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBCajerosActionPerformed
        int getElig = jCmbBCajeros.getSelectedIndex();
        String idUser = "";
        if(getElig > -1){
            if(getElig == 0){
              //  JOptionPane.showMessageDialog(null, "Cargar todos");
            }    
            if(getElig > 0){
                idUser = idCajeros.get(getElig - 1);
               // JOptionPane.showMessageDialog(null, "id es"+idUser);
            }            
        }
    }//GEN-LAST:event_jCmbBCajerosActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
   int getElig = jCmbBCajeros.getSelectedIndex();
           String idUser = ""; 
            semanaAct = func.getSemanTableAct(datCtrl.setDateActual());
            
        if(getElig > -1){
            if(getElig == 0){
                getIntervalTurns(1,"",semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }    
            if(getElig > 0){
                idUser = idCajeros.get(getElig - 1);
                System.err.println("Eligio user turno : "+ idUser);
                getIntervalTurns(1,idUser,semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }            
        }  

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        String var = datCtrl.getFechaCal(jCalendar1),
                tittol = jDialCalendarMantenim.getTitle()
                ;
        int subRbro = -1;
        semanaAct = func.getSemanTableAct(var);
        
        if(tittol.equals("Corte de caja")){
            int getElig = jCmbBCajeros.getSelectedIndex();
          String idUser = "";
        if(getElig > -1){
            if(getElig == 0){
                getIntervalTurns(1,"",semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }    
            if(getElig > 0){
                idUser = idCajeros.get(getElig - 1);
                System.err.println("Eligio user turno : "+ idUser);
                getIntervalTurns(1,idUser,semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }            
        }  
        }
        
        if(tittol.equals("Cancelaciones")){
       int getElig = jCmBoxIdCancel.getSelectedIndex();
          String idUser ="";
        if(getElig > -1){
            if(getElig == 0){
                getIntervalTurns2(1,"",semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }    
            if(getElig > 0){
               idUser = idCajeros.get(getElig - 1);
                System.err.println("Eligio user turno Cancel : "+ idUser);
                getIntervalTurns2(1,idUser,semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }            
        } 
        }
        
        if(tittol.equals("Ingresos")){
            int opc = jCBoxEsIngreso.getSelectedIndex();
            jLabLetrero.setText("Semana "+semanaAct[2]+" : del "+semanaAct[3]+" al "+semanaAct[4]);

            switch(opc){
                case 0 ://Ingreso ver todos
                     getIntervalIngresos(opc,"",semanaAct[3],semanaAct[4]);//envia opcion,subopcion,lapso de semanas
                     jLabel18.setText(sumCorteCajFechonas(semanaAct[3],semanaAct[4]));
                break;
                case 1 ://areas
                    subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opc,"",semanaAct[3],semanaAct[4]);
                    BigDecimal totAreas = new BigDecimal(func.totalLapsoFechas(0,"",semanaAct[3],semanaAct[4]));
                    jLabel18.setText(totAreas.toString());
}else{
                    getIntervalIngresos(opc,Integer.toString((subRbro + 1)),semanaAct[3],semanaAct[4]);
                    BigDecimal totAreas = new BigDecimal(func.totalLapsoFechas(0,Integer.toString((subRbro + 1)),semanaAct[3],semanaAct[4]));
                    jLabel18.setText(totAreas.toString());
}
                    break;
                case 2 ://ambulantes
          subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opc,"",semanaAct[3],semanaAct[4]);
                    BigDecimal totambs = new BigDecimal(func.totalLapsoFechas(1,"",semanaAct[3],semanaAct[4]));
                    jLabel18.setText(totambs.toString());
}else{
                    if(subRbro == 1)
                        subRbro=6;//semana ambulantes
                    if(subRbro == 2)
                        subRbro=7;//Resguardo ambulantes
                    if(subRbro == 3)
                        subRbro=8;//Inscripciones ambulantes
                    getIntervalIngresos(opc,Integer.toString(subRbro),semanaAct[3],semanaAct[4]);
                    BigDecimal totambs = new BigDecimal(func.totalLapsoFechas(1,Integer.toString(subRbro),semanaAct[3],semanaAct[4]));
                     jLabel18.setText(totambs.toString());
}
                    break;
                case 3 :// cargadores
                    subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opc,"",semanaAct[3],semanaAct[4]);
                    BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,"",semanaAct[3],semanaAct[4]));
                    BigDecimal totcarg2 = new BigDecimal(func.totalLapsoFechas(3,"",semanaAct[3],semanaAct[4]));
                    BigDecimal totcargAll = func.getSum(totcarg2, totcarg);
                    jLabel18.setText(totcargAll.toString());
}else{
                    if(subRbro == 1){
                        subRbro=11;//semana cargadores
                        BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,Integer.toString(subRbro),semanaAct[3],semanaAct[4]));
                        jLabel18.setText(totcarg.toString());
                    }
                    if(subRbro == 2){
                        subRbro=8;//8,9,10 -> inscripcion cargadores
                        BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,Integer.toString(subRbro),semanaAct[3],semanaAct[4]));
                        jLabel18.setText(totcarg.toString()); 
                    }
                    if(subRbro == 3){
                        subRbro=12;//Renta  cargadores
                        BigDecimal totcarg2 = new BigDecimal(func.totalLapsoFechas(3,"",semanaAct[3],semanaAct[4]));
                        jLabel18.setText(totcarg2.toString());
                    }
                    getIntervalIngresos(opc,Integer.toString(subRbro),semanaAct[3],semanaAct[4]);
}
                break;
                case 4 ://infracciones
                    getIntervalIngresos(opc,"",semanaAct[3],semanaAct[4]);
                    BigDecimal totInfrac = new BigDecimal(func.totalLapsoFechas(4,"",semanaAct[3],semanaAct[4]));
                    jLabel18.setText(totInfrac.toString());
                 break;
                 case 5 ://otros_venta
                 subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){                     
                    getIntervalIngresos(opc,"",semanaAct[3],semanaAct[4]);
                    BigDecimal totIOthers = new BigDecimal(func.totalLapsoFechas(5,"",semanaAct[3],semanaAct[4]));
                    jLabel18.setText(totIOthers.toString());
}else{
    getIntervalIngresos(opc,Integer.toString(subRbro),semanaAct[3],semanaAct[4]);
    BigDecimal totIOthers = new BigDecimal(func.totalLapsoFechas(5,Integer.toString(subRbro),semanaAct[3],semanaAct[4]));
     jLabel18.setText(totIOthers.toString());
}
                 break;
            };
             jLabel17.setText(Integer.toString(jTabViewIngresosAll.getRowCount()));
        }
        
        
         if(tittol.equals("Egresos")){
              int opc = jCmBoxEgresos.getSelectedIndex();
              int idRibro = -1;
              jLabel8.setText("Semana "+semanaAct[2]+" : del "+semanaAct[3]+" al "+semanaAct[4]);
              
              if(opc == 0){
                    getIntervalEgresos(opc,semanaAct[3],semanaAct[4]);
                    jLabTOTEGRESOS.setText(getTOTALEGRESOS(opc,semanaAct[3],semanaAct[4]));
              }
              if(opc > 0){
                  idRibro =Integer.parseInt(idGastosEg.get(opc-1));
           
                   getIntervalEgresos(idRibro,semanaAct[3],semanaAct[4]);
                    jLabTOTEGRESOS.setText(getTOTALEGRESOS(idRibro,semanaAct[3],semanaAct[4]));
              }
              jLabel10.setText(Integer.toString(jTable6.getRowCount()));
         }
        jDialCalendarMantenim.dispose();
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jDialCalendarMantenim.setLocationRelativeTo(this);
        jDialCalendarMantenim.setVisible(true);
        jDialCalendarMantenim.setEnabled(true);
        jDialCalendarMantenim.setTitle("Corte de caja");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTabViewTurnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabViewTurnosMouseClicked
    //    int numTurn = jTabViewTurnos.getSelectedRow();
        
            if(evt.getClickCount() > 1){
                jButton1.doClick();/*
                    if(numTurn > -1){
                        buscarTurn = jTabViewTurnos.getValueAt(numTurn, 0).toString();
                        String[][] mat = contrl.matrizgetTicketsDia("",buscarTurn);
                        jTabDetailTurnos.setModel(new TModel(mat, cabAreasPays));
                    }*/
            }
    }//GEN-LAST:event_jTabViewTurnosMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(buscarTurn.equals("0")){
            JOptionPane.showMessageDialog(null, "Debe elejir un turno");
        }else{
        
        String[] turns = func.getTurnoData(Integer.parseInt(buscarTurn));
        String[] infoUser = func.getnombreUsuario(Integer.parseInt(turns[1]));
        String[] paramDats = new String[7];
        
        paramDats[0] = infoUser[1];
        paramDats[1] = turns[3];
        paramDats[2] = turns[4];
        paramDats[3] = turns[2];
        paramDats[4] = sumCorteCaj(buscarTurn);
        paramDats[5] = func.totalturno(6,buscarTurn);
        
        BigDecimal salInic = new BigDecimal(turns[2]);
        BigDecimal Cobros = new BigDecimal(paramDats[4]);
        BigDecimal gastosCaj = new BigDecimal(paramDats[5]);
        
        paramDats[6] = func.getDifference(func.getSum(Cobros, salInic), gastosCaj).toString();
        
        rP.imprim80MM_corteCaja(buscarTurn,false,paramDats);
        //rP.creListenerButton(Integer.parseInt(infoUser[6]), infoUser[2],infoUser[0]);    
        }        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int numTurn = jTabViewTurnos.getSelectedRow();
                    if(numTurn > -1){
                        buscarTurn = jTabViewTurnos.getValueAt(numTurn, 0).toString();
                        jLabViewFolio.setText(buscarTurn);
                        String[][] mat = contrl.matrizgetTicketsDia("",buscarTurn);
                        jTabDetailTurnos.setModel(new TModel(mat, cabAreasPays));
                    }else{
                        JOptionPane.showMessageDialog(null, "Debe elegir un Turno");
                    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          if(buscarTurn.equals("0")){
                JOptionPane.showMessageDialog(null, "Debe elejir un turno");
          }else{
                String[][] mat = func.getGastosCajTurn("",buscarTurn);
                jTabDetailTurnos.setModel(new TModel(mat, cabGastCajas));
          }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTabDetailTurnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabDetailTurnosMouseClicked
        if(evt.getClickCount() > 1){ 
        int fila = jTabDetailTurnos.getSelectedRow();
                if(fila >= 0){
                    String mostTic = jTabDetailTurnos.getValueAt(fila, 0).toString(),
                            concepto = jTabDetailTurnos.getValueAt(fila, 2).toString();
                    if(concepto.equals("Pago Areas")){
                        String[] dat = rP.getUltimPagoarea(mostTic);
                        rP.imprim80MM(mostTic, dat,false);
                    }
                    if(concepto.equals("Pago Ambulantes")){
                        String[] dat = rP.getTickPagoAmbu(mostTic);
                        rP.imprim80MMAmbus(mostTic, dat,false);
                    }
                    if(concepto.equals("Pago Cargadores")){                    
                        String[] dat = rP.getTickPagoCargad(mostTic);
                        rP.imprim80MMCargad(mostTic, dat,false);
                    }
                    if(concepto.equals("Pago Infraccion")){                    
                         rP.imprim80MM_Infrac(mostTic,false);
                    }
                    if(concepto.equals("Varios Amb.") || concepto.equals("Varios Cte.") || concepto.equals("Varios Carg.")){                    
                         String[] dat = rP.getTickOthers(mostTic);
                         rP.imprim80MMOthers(mostTic,dat,false);
                    }
                    if(concepto.equals("Pago Renta Carg")){                    
                         rP.imprim80MM_CargRent(mostTic,false);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Debe elegir que mostrar");
                }
        }
    }//GEN-LAST:event_jTabDetailTurnosMouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       int getElig = jCmBoxIdCancel.getSelectedIndex();
           String idUser = ""; 
            semanaAct = func.getSemanTableAct(datCtrl.setDateActual());
            
        if(getElig > -1){
            if(getElig == 0){
                getIntervalTurns2(1,"",semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }    
            if(getElig > 0){
                idUser = idCajeros.get(getElig - 1);
//                System.err.println("Eligio user turno cancel : "+ idUser);
                getIntervalTurns2(1,idUser,semanaAct[3],semanaAct[4]);//opc,idUser,fech1,fech2
            }            
        }  
        
       // getIntervalTurns(0,"","","")
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
       jDialCalendarMantenim.setLocationRelativeTo(this);
        jDialCalendarMantenim.setVisible(true);
        jDialCalendarMantenim.setEnabled(true);
        jDialCalendarMantenim.setTitle("Cancelaciones");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if(evt.getClickCount() > 1){
        int numTurn = jTable2.getSelectedRow();
                    if(numTurn > -1){
                        buscarTurn = jTable2.getValueAt(numTurn, 0).toString();
                        jLabTurnCancel.setText(buscarTurn);
                        String[][] mat = contrl.matrizgetTicketsDiaCancel("",buscarTurn);
                        jTable1.setModel(new TModel(mat, cabAreasPays));
                    }else{
                        JOptionPane.showMessageDialog(null, "Debe elegir un Turno");
                    }
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jCBoxEsIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxEsIngresoActionPerformed
        int eligio = jCBoxEsIngreso.getSelectedIndex();
        if(eligio > -1){
            cragaDinRubros(eligio);        
        }else{
            JOptionPane.showMessageDialog(null, "No esxite opcion");
        }

    }//GEN-LAST:event_jCBoxEsIngresoActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
       jDialCalendarMantenim.setLocationRelativeTo(this);
        jDialCalendarMantenim.setVisible(true);
        jDialCalendarMantenim.setEnabled(true);
        jDialCalendarMantenim.setTitle("Ingresos");
         jCalendar1.setDate(datCtrl.cargafecha());
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jDialCalendarMantenim.setLocationRelativeTo(this);
        jDialCalendarMantenim.setVisible(true);
        jDialCalendarMantenim.setEnabled(true);
        jDialCalendarMantenim.setTitle("Egresos");
        jCalendar1.setDate(datCtrl.cargafecha());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        jDialFechonas.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jDialFechonas.setLocationRelativeTo(null);
        jDialFechonas.setVisible(true);
        jDialFechonas.setEnabled(true);
        jDialFechonas.setTitle("Egresos");
        jDateChooser1.setDate(datCtrl.cargafecha());
        jDateChooser2.setDate(datCtrl.cargafecha());
        jRadioEspedific.setSelected(true);
        jLabel13.setEnabled(true);
            jDateChooser1.setEnabled(true);
            jLabel14.setEnabled(false);
            jDateChooser2.setEnabled(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jRadioEspedificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioEspedificActionPerformed
        if(jRadioEspedific.isSelected()){
            jLabel13.setEnabled(true);
            jDateChooser1.setEnabled(true);
            jLabel14.setEnabled(false);
            jDateChooser2.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioEspedificActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
       jLabel13.setEnabled(true);
            jDateChooser1.setEnabled(true);
            jLabel14.setEnabled(true);
            jDateChooser2.setEnabled(true);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       String quees = jDialFechonas.getTitle();
       String fech1="", fech2="";
       
       if(quees.equals("Egresos")){
            int opcois = jCmBoxEgresos.getSelectedIndex();
            int idRibron = -1;
           if(jRadioEspedific.isSelected()){
              
               int opciv = -1;
          //     System.err.println("buscar :"+opciv);
               fech1 = datCtrl.getFecha(jDateChooser1);
                jLabel8.setText("Fecha "+fech1);
                if(opcois == 0){//si es 0 = busca todos rubros
                    getIntervalEgresos(10,fech1,fech2);
                    jLabTOTEGRESOS.setText(getTOTALEGRESOS(10,fech1,fech2));
                } 
                if( opcois > 0 ){
                   opciv = Integer.parseInt(idGastosEg.get(opcois-1));
                    getIntervalEgresos(opciv+10,fech1,fech2);
                    jLabTOTEGRESOS.setText(getTOTALEGRESOS(opciv+10,fech1,fech2));
                }
              
           }else{
                fech1 = datCtrl.getFecha(jDateChooser1);
                fech2 = datCtrl.getFecha(jDateChooser2);
                jLabel8.setText("Fecha Inicio: "+fech1+" a Fecha final :"+fech2);
                
                if(opcois == 0){
                    getIntervalEgresos(0,fech1,fech2);
                    jLabTOTEGRESOS.setText(getTOTALEGRESOS(0,fech1,fech2));
                }
               if(opcois > 0){
                  idRibron =Integer.parseInt(idGastosEg.get(opcois-1));
           
                   getIntervalEgresos(idRibron,fech1,fech2);
                    jLabTOTEGRESOS.setText(getTOTALEGRESOS(idRibron,fech1,fech2));
              }
           }
                jLabel10.setText(Integer.toString(jTable6.getRowCount()));
       }
       
       if(quees.equals("Ingresos")){//opcion entre fechas o lapso de fechas
            int opcois = jCBoxEsIngreso.getSelectedIndex(),
                    subRbro=-1;
           
if(jRadioEspedific.isSelected()){
               fech1 = datCtrl.getFecha(jDateChooser1);
  
            jLabLetrero.setText("Día: "+fech1);

            switch(opcois){
                case 0 ://Ingreso ver todos
                     getIntervalIngresos(opcois,"",fech1,fech1);//envia opcion,subopcion,lapso de semanas
                     jLabel18.setText(sumCorteCajFechonas(fech1,fech1));
                break;
                case 1 ://areas
                    subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opcois,"",fech1,fech1);
                    BigDecimal totAreas = new BigDecimal(func.totalLapsoFechas(0,"",fech1,fech1));
                    jLabel18.setText(totAreas.toString());
}else{
                    getIntervalIngresos(opcois,Integer.toString((subRbro + 1)),fech1,fech1);
                    BigDecimal totAreas = new BigDecimal(func.totalLapsoFechas(0,Integer.toString((subRbro + 1)),fech1,fech1));
                    jLabel18.setText(totAreas.toString());
}
                    break;
                case 2 ://ambulantes
          subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opcois,"",fech1,fech1);
                    BigDecimal totambs = new BigDecimal(func.totalLapsoFechas(1,"",fech1,fech1));
                    jLabel18.setText(totambs.toString());
}else{
                    if(subRbro == 1)
                        subRbro=6;//semana ambulantes
                    if(subRbro == 2)
                        subRbro=7;//Resguardo ambulantes
                    if(subRbro == 3)
                        subRbro=8;//Inscripciones ambulantes
                    getIntervalIngresos(opcois,Integer.toString(subRbro),fech1,fech1);
                    BigDecimal totambs = new BigDecimal(func.totalLapsoFechas(1,Integer.toString(subRbro),fech1,fech1));
                     jLabel18.setText(totambs.toString());
}
                    break;
                case 3 :// cargadores
                    subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opcois,"",fech1,fech1);
                    BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,"",fech1,fech1));
                    BigDecimal totcarg2 = new BigDecimal(func.totalLapsoFechas(3,"",fech1,fech1));
                    BigDecimal totcargAll = func.getSum(totcarg2, totcarg);
                    jLabel18.setText(totcargAll.toString());
}else{
                    if(subRbro == 1){
                        subRbro=11;//semana cargadores
                        BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,Integer.toString(subRbro),fech1,fech1));
                        jLabel18.setText(totcarg.toString());
                    }
                    if(subRbro == 2){
                        subRbro=8;//8,9,10 -> inscripcion cargadores
                        BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,Integer.toString(subRbro),fech1,fech1));
                        jLabel18.setText(totcarg.toString()); 
                    }
                    if(subRbro == 3){
                        subRbro=12;//Renta  cargadores
                        BigDecimal totcarg2 = new BigDecimal(func.totalLapsoFechas(3,"",fech1,fech1));
                        jLabel18.setText(totcarg2.toString());
                    }
                    getIntervalIngresos(opcois,Integer.toString(subRbro),fech1,fech1);
}
                break;
                case 4 ://infracciones
                    getIntervalIngresos(opcois,"",fech1,fech1);
                    BigDecimal totInfrac = new BigDecimal(func.totalLapsoFechas(4,"",fech1,fech1));
                    jLabel18.setText(totInfrac.toString());
                 break;
                 case 5 ://otros_venta
                 subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){                     
                    getIntervalIngresos(opcois,"",fech1,fech1);
                    BigDecimal totIOthers = new BigDecimal(func.totalLapsoFechas(5,"",fech1,fech1));
                    jLabel18.setText(totIOthers.toString());
}else{
    getIntervalIngresos(opcois,Integer.toString(subRbro),fech1,fech1);
    BigDecimal totIOthers = new BigDecimal(func.totalLapsoFechas(5,Integer.toString(subRbro),fech1,fech1));
     jLabel18.setText(totIOthers.toString());
}
                 break;
            };
             jLabel17.setText(Integer.toString(jTabViewIngresosAll.getRowCount()));
               
               
                
            }else{//HATA AQUI INGRESOS FILTROS EN 1 FECHONA
                 fech1 = datCtrl.getFecha(jDateChooser1);
                 fech2 = datCtrl.getFecha(jDateChooser2); 
                 jLabLetrero.setText("Dias del "+fech1+" al "+fech2);
            switch(opcois){
                case 0 ://todos los rubros
                     getIntervalIngresos(opcois,"",fech1,fech2);//envia opcion,subopcion,lapso de semanas
                     jLabel18.setText(sumCorteCajFechonas(fech1,fech2));
                     
                break;
                case 1 ://areas
                    subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opcois,"",fech1,fech2);
                    BigDecimal totAreas = new BigDecimal(func.totalLapsoFechas(0,"",fech1,fech2));
                    jLabel18.setText(totAreas.toString());
}else{
                    getIntervalIngresos(opcois,Integer.toString((subRbro + 1)),fech1,fech2);
                    BigDecimal totAreas = new BigDecimal(func.totalLapsoFechas(0,Integer.toString((subRbro + 1)),fech1,fech2));
                    jLabel18.setText(totAreas.toString());
}
                break;
                case 2 ://ambulantes
          subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opcois,"",fech1,fech2);
                    BigDecimal totambs = new BigDecimal(func.totalLapsoFechas(1,"",fech1,fech2));
                    jLabel18.setText(totambs.toString());
}else{
                    if(subRbro == 1)
                        subRbro=6;//semana ambulantes
                    if(subRbro == 2)
                        subRbro=7;//Resguardo ambulantes
                    if(subRbro == 3)
                        subRbro=8;//Inscripciones ambulantes
                    getIntervalIngresos(opcois,Integer.toString(subRbro),fech1,fech2);
                    BigDecimal totambs = new BigDecimal(func.totalLapsoFechas(1,Integer.toString(subRbro),fech1,fech2));
                     jLabel18.setText(totambs.toString());
}
                    break;
case 3 ://cargadores
                    subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){
                    getIntervalIngresos(opcois,"",fech1,fech2);
                    BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,"",fech1,fech2));
                    BigDecimal totcarg2 = new BigDecimal(func.totalLapsoFechas(3,"",fech1,fech2));
                    BigDecimal totcargAll = func.getSum(totcarg2, totcarg);
                    jLabel18.setText(totcargAll.toString());
}else{
                    if(subRbro == 1){
                        subRbro=11;//semana cargadores
                        BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,Integer.toString(subRbro),fech1,fech2));
                        jLabel18.setText(totcarg.toString());
                    }
                    if(subRbro == 2){
                        subRbro=8;//8,9,10 -> inscripcion cargadores
                        BigDecimal totcarg = new BigDecimal(func.totalLapsoFechas(2,Integer.toString(subRbro),fech1,fech2));
                        jLabel18.setText(totcarg.toString()); 
                    }
                    if(subRbro == 3){
                        subRbro=12;//Renta  cargadores
                        BigDecimal totcarg2 = new BigDecimal(func.totalLapsoFechas(3,"",fech1,fech2));
                        jLabel18.setText(totcarg2.toString());
                    }
                    getIntervalIngresos(opcois,Integer.toString(subRbro),fech1,fech2);
}
                break;
                case 4 ://infracciones
                    getIntervalIngresos(opcois,"",fech1,fech2);
                    BigDecimal totInfrac = new BigDecimal(func.totalLapsoFechas(4,"",fech1,fech2));
                    jLabel18.setText(totInfrac.toString());
                 break;
                 case 5 ://otros pagos rubros
                 subRbro = jCBoxEsRubroDet.getSelectedIndex();
if(subRbro == 0){                     
                    getIntervalIngresos(opcois,"",fech1,fech2);
                    BigDecimal totIOthers = new BigDecimal(func.totalLapsoFechas(5,"",fech1,fech2));
                    jLabel18.setText(totIOthers.toString());
}else{
    getIntervalIngresos(opcois,Integer.toString(subRbro),fech1,fech2);
    BigDecimal totIOthers = new BigDecimal(func.totalLapsoFechas(5,Integer.toString(subRbro),fech1,fech2));
     jLabel18.setText(totIOthers.toString());
}
                 break;
            };
             jLabel17.setText(Integer.toString(jTabViewIngresosAll.getRowCount())); 
       }
       }
            jDialFechonas.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jCmBoxEgresosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmBoxEgresosActionPerformed
         int opc = jCmBoxEgresos.getHeight();
         String idRibro ="";
         if(opc > 0){
         opc = jCmBoxEgresos.getSelectedIndex();
         if(opc > 0)
             idRibro = idGastosEg.get(opc-1);
         }
    }//GEN-LAST:event_jCmBoxEgresosActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
                try{
           Thread t;//Thread
                t = new Thread(){
                    public void run(){
        Object var = null,var1 = null, var2 = null,var3 = null,var4 = null,var5 = null,var6 = null,var7 = null,var8 = null;

                        XSSFWorkbook workbook = new XSSFWorkbook();
                        XSSFSheet hoja = workbook.createSheet();
                        
                        XSSFRow fila = hoja.createRow(0);
                        fila.createCell(0).setCellValue("Folio");
                        fila.createCell(1).setCellValue("Fecha");
                        fila.createCell(2).setCellValue("Hora");
                        fila.createCell(3).setCellValue("Rubro");
                        fila.createCell(4).setCellValue("Concepto");
                        fila.createCell(5).setCellValue("Nombre");
                        fila.createCell(6).setCellValue("Monto");
                        fila.createCell(7).setCellValue("Turno");
                        
                        XSSFCellStyle style =workbook.createCellStyle();
                        jProgressBar1.setMaximum(jTable6.getRowCount());
                        XSSFRow filas = null;
                        Rectangle rect;
                        for(int i=0;i<jTable6.getRowCount();i++){
                            rect =jTable6.getCellRect(i, 0, true);
                            
                            try{
                                jTable6.scrollRectToVisible(rect);
                                
                            }catch(java.lang.ClassCastException e){ }//try
                            jTable6.setRowSelectionInterval(i, i);
                            
                            jProgressBar1.setValue((i+1));
                            
                            filas = hoja.createRow((i+1));//LO CREMAOS A PARTIR DE LA 5TA FILA
                            //var2.isEmpty()) ? "/" : var2
                            var = jTable6.getValueAt(i, 0);
                            if (var != null && !var.toString().isEmpty()) {
                                 filas.createCell(0).setCellValue(var.toString());
                            }else{
                                filas.createCell(0).setCellValue("");
                            }
                            var1 = jTable6.getValueAt(i, 1);
                            if (var1 != null && !var1.toString().isEmpty()) {
                                 filas.createCell(1).setCellValue(var1.toString());
                            }else{
                                filas.createCell(1).setCellValue("");
                            }
                            var2 = jTable6.getValueAt(i, 2);
                            if (var2 != null && !var2.toString().isEmpty()) {
                                 filas.createCell(2).setCellValue(var2.toString());
                            }else{
                                filas.createCell(2).setCellValue("");
                            }                           
                            var3 = jTable6.getValueAt(i, 3);
                            if (var3 != null && !var3.toString().isEmpty()) {
                                 filas.createCell(3).setCellValue(var3.toString());
                            }else{
                                filas.createCell(3).setCellValue("");
                            }
                            var4 = jTable6.getValueAt(i, 4);
                            if (var4 != null && !var4.toString().isEmpty()) {
                                 filas.createCell(4).setCellValue(var4.toString());
                            }else{
                                filas.createCell(4).setCellValue("");
                            }                    
                            var5 = jTable6.getValueAt(i, 5);
                            if (var5 != null && !var5.toString().isEmpty()) {
                                 filas.createCell(5).setCellValue(var5.toString());
                            }else{
                                filas.createCell(5).setCellValue("");
                            }
                            var6 = jTable6.getValueAt(i, 6);
                            if (var6 != null && !var6.toString().isEmpty()) {
                                 filas.createCell(6).setCellValue(var6.toString());
                            }else{
                                filas.createCell(6).setCellValue("");
                            }
                            var7 = jTable6.getValueAt(i, 7);
                            if (var7 != null && !var7.toString().isEmpty()) {
                                 filas.createCell(7).setCellValue(var7.toString());
                            }else{
                                filas.createCell(7).setCellValue("");
                            }
                        }//for1
                            hoja.autoSizeColumn(0);//autoajustar celdas al ancho de los datos
                            hoja.autoSizeColumn(1);//autoajustar celdas al ancho de los datos
                            hoja.autoSizeColumn(2);//autoajustar celdas al ancho de los datos
                            hoja.autoSizeColumn(3);//autoajustar celdas al ancho de los datos
                            hoja.autoSizeColumn(4);//autoajustar celdas al ancho de los datos
                            hoja.autoSizeColumn(5);//autoajustar celdas al ancho de los datos
                            hoja.autoSizeColumn(6);//autoajustar celdas al ancho de los datos
                            hoja.autoSizeColumn(7);//autoajustar celdas al ancho de los datos
                        jProgressBar1.setValue(0);
                        jProgressBar1.setString("Abrieno Excel");
                        try{
                            FileOutputStream word = new FileOutputStream("egresos"+datCtrl.setDateActualGuion()+".xlsx");
                            workbook.write(word);
                            word.close();
                            File file = new File("egresos"+datCtrl.setDateActualGuion()+".xlsx");
                            Desktop.getDesktop().open(file);
                        }catch (Exception ex){
                            Logger.getLogger(ambulantes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }//try
                };
           t.start();
       }catch(Exception e) {JOptionPane.showMessageDialog(null, e);} 
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        jDialFechonas.setLocationRelativeTo(null);
        jDialFechonas.setVisible(true);
        jDialFechonas.setEnabled(true);
        jDialFechonas.setTitle("Ingresos");
        jDateChooser1.setDate(datCtrl.cargafecha());
        jDateChooser2.setDate(datCtrl.cargafecha());
        jRadioEspedific.setSelected(true);
        jLabel13.setEnabled(true);
            jDateChooser1.setEnabled(true);
            jLabel14.setEnabled(false);
            jDateChooser2.setEnabled(false);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        int rows =  jTabViewIngresosAll.getRowCount(),
                opcionAr = jCBoxEsIngreso.getSelectedIndex();
        if(rows >0){
        try{
           Thread t;//Thread
                t = new Thread(){
                    public void run(){

                        XSSFWorkbook workbook = new XSSFWorkbook();
                        XSSFSheet hoja = workbook.createSheet();
                        
                        XSSFRow fila = hoja.createRow(0);
                        
                        if(opcionAr == 1){
                             fila.createCell(0).setCellValue("#Ticket");
                            fila.createCell(1).setCellValue("Fecha");
                            fila.createCell(2).setCellValue("Hora");
                            fila.createCell(3).setCellValue("Rubro");
                            fila.createCell(4).setCellValue("Area");
                            fila.createCell(5).setCellValue("Ult. Semana");
                            fila.createCell(6).setCellValue("Cajero(a)");
                            fila.createCell(7).setCellValue("Total");
                        }else{
                            fila.createCell(0).setCellValue("#Ticket");
                            fila.createCell(1).setCellValue("Fecha");
                            fila.createCell(2).setCellValue("Hora");
                            fila.createCell(3).setCellValue("Rubro");
                            fila.createCell(4).setCellValue("Nombre");
                            fila.createCell(5).setCellValue("Total");
                        }
                        XSSFCellStyle style =workbook.createCellStyle();
                        jProgressBar2.setMaximum(jTabViewIngresosAll.getRowCount());
                        XSSFRow filas = null;
                        Rectangle rect;
                        
                        for(int i=0;i<jTabViewIngresosAll.getRowCount();i++){
                             rect =jTabViewIngresosAll.getCellRect(i, 0, true);
                              try{
                               jTabViewIngresosAll.scrollRectToVisible(rect);
                            }catch(java.lang.ClassCastException e){ }//try
                               
                            jProgressBar2.setValue((i+1));
                            filas = hoja.createRow((i+1));//LO CREMAOS A PARTIR DE LA 5TA FILA
                            
                            if(opcionAr == 1){
                                 filas.createCell(0).setCellValue(jTabViewIngresosAll.getValueAt(i, 0).toString());
                                 filas.createCell(1).setCellValue(jTabViewIngresosAll.getValueAt(i, 1).toString());
                                 filas.createCell(2).setCellValue(jTabViewIngresosAll.getValueAt(i, 2).toString());
                                 filas.createCell(3).setCellValue(jTabViewIngresosAll.getValueAt(i, 3).toString());
                                 filas.createCell(4).setCellValue(jTabViewIngresosAll.getValueAt(i, 4).toString());
                                 filas.createCell(5).setCellValue(jTabViewIngresosAll.getValueAt(i, 5).toString());                                
                                 filas.createCell(6).setCellValue(jTabViewIngresosAll.getValueAt(i, 6).toString());                                
                                 filas.createCell(7).setCellValue(jTabViewIngresosAll.getValueAt(i, 7).toString());                                
                            }else{
                                 filas.createCell(0).setCellValue(jTabViewIngresosAll.getValueAt(i, 0).toString());
                                 filas.createCell(1).setCellValue(jTabViewIngresosAll.getValueAt(i, 1).toString());
                                 filas.createCell(2).setCellValue(jTabViewIngresosAll.getValueAt(i, 2).toString());
                                 filas.createCell(3).setCellValue(jTabViewIngresosAll.getValueAt(i, 3).toString());
                                 filas.createCell(4).setCellValue(jTabViewIngresosAll.getValueAt(i, 4).toString());
                                 filas.createCell(5).setCellValue(jTabViewIngresosAll.getValueAt(i, 5).toString());
                            }
                            }
                        hoja.autoSizeColumn(3);//autoajustar celdas al ancho de los datos
                        hoja.autoSizeColumn(4);//autoajustar celdas al ancho de los datos
                        hoja.autoSizeColumn(5);//autoajustar celdas al ancho de los datos
                        jProgressBar2.setValue(0);
                        jProgressBar2.setString("Abrieno Excel");
                        try{
                            FileOutputStream word = new FileOutputStream("ingresos"+datCtrl.setDateActualGuion()+".xlsx");
                            workbook.write(word);
                            word.close();
                            File file = new File("ingresos"+datCtrl.setDateActualGuion()+".xlsx");
                            Desktop.getDesktop().open(file);
                        }catch (Exception ex){
                            Logger.getLogger(ambulantes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }//try
                };
           t.start();
       }catch(Exception e) {JOptionPane.showMessageDialog(null, e);
       } 
        }else{
            JOptionPane.showMessageDialog(null, "Debe exisitir algun registro en la tabla");
        }
    }//GEN-LAST:event_jButton16ActionPerformed

        //funcion para busqueda automatica de otros conceptos
        void getIntervalTurns(int opc, String idUsers,String fech1,String fech2){
                Connection cn = con2.conexion();
                DefaultTableModel modelo = new DefaultTableModel()
                { 
                    @Override
                    public boolean isCellEditable (int fila, int columna) {
                        return false;
                    }
                };
                String consul="";
                if(opc == 0){//
                    consul ="SELECT  turnos.id,usuarios.nombre,turnos.finicial,turnos.ffinal\n" +
                            "FROM turnos\n" +
                            "INNER JOIN usuarios\n" +
                            "ON turnos.idusuario = usuarios.id AND date(turnos.finicial) BETWEEN date((SELECT semanas.finicial FROM semanas WHERE CURDATE() BETWEEN finicial AND ffinal) )\n" +
                            "AND date((SELECT semanas.ffinal FROM semanas WHERE CURDATE() BETWEEN date(finicial) AND date(ffinal) ) )\n" +
                            "ORDER BY turnos.id DESC;";
                }
                if(opc == 1){
                    if(idUsers.isEmpty()){
                    consul = "SELECT  turnos.id,usuarios.nombre,turnos.finicial,turnos.ffinal\n" +
                        "FROM turnos\n" +
                        "INNER JOIN usuarios\n" +
                        "ON turnos.idusuario = usuarios.id AND (date(turnos.finicial) >= '"+fech1+"' AND date(turnos.finicial) <= '"+fech2+"')\n" +
                        "ORDER BY turnos.id;";
                    }else{
                        consul = "SELECT  turnos.id,usuarios.nombre,turnos.finicial,turnos.ffinal\n" +
                        "FROM turnos\n" +
                        "INNER JOIN usuarios\n" +
                        "ON turnos.idusuario = usuarios.id AND turnos.idusuario = '"+idUsers+"' AND (date(turnos.finicial) >= '"+fech1+"' AND date(turnos.finicial) <= '"+fech2+"')\n" +
                        "ORDER BY turnos.id;";
                    }
                    }
                 //consul = "SELECT id, nombre from ambulantes WHERE id LIKE '"+var+"%'  OR nombre LIKE '"+var+"%' ORDER BY id";
                        modelo.addColumn("#Turno");       
                        modelo.addColumn("Cajero");
                        modelo.addColumn("Inicio");
                        modelo.addColumn("Finalizado");

                jTabViewTurnos.setModel(modelo);
                TableColumnModel columnModel = jTabViewTurnos.getColumnModel();
              jTabViewTurnos.getColumnModel().getColumn(0).setPreferredWidth(80);
                jTabViewTurnos.getColumnModel().getColumn(0).setMaxWidth(150);
                jTabViewTurnos.getColumnModel().getColumn(0).setMinWidth(50);

                 jTabViewTurnos.getColumnModel().getColumn(1).setPreferredWidth(180);
                jTabViewTurnos.getColumnModel().getColumn(1).setMaxWidth(250);
                jTabViewTurnos.getColumnModel().getColumn(1).setMinWidth(180);

                String datos[] =  new String[4];//tenia 4
                Statement st = null;
                ResultSet rs = null;
                try {
                    st = cn.createStatement();
                    rs = st.executeQuery(consul);

                    while(rs.next()){
                        datos[0] =rs.getString(1);
                        datos[1] = rs.getString(2);
                        datos[2] = rs.getString(3);
                        datos[3] = rs.getString(4);
                        modelo.addRow(datos);
                    }
                    jTabViewTurnos.setModel(modelo);
                } catch (SQLException ex) {
                    Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                     try {
                            if(rs != null) rs.close();              
                            if(st != null) st.close();                
                            if(cn !=null) cn.close();
                     } catch (SQLException ex) {
                     }
                 }
    }//@endgetProductsOthers
        
          //funcion para busqueda automatica de otros conceptos
        void getIntervalTurns2(int opc, String idUsers,String fech1,String fech2){
                Connection cn = con2.conexion();
                DefaultTableModel modelo = new DefaultTableModel()
                { 
                    @Override
                    public boolean isCellEditable (int fila, int columna) {
                        return false;
                    }
                };
                String consul="";
                if(opc == 0){
                    consul ="SELECT  turnos.id,usuarios.nombre,turnos.finicial,turnos.ffinal\n" +
                            "FROM turnos\n" +
                            "INNER JOIN usuarios\n" +
                            "ON turnos.idusuario = usuarios.id AND turnos.finicial BETWEEN (SELECT semanas.finicial FROM semanas WHERE CURDATE() BETWEEN date(finicial) AND date(ffinal) )\n" +
                            "AND (SELECT semanas.ffinal FROM semanas WHERE CURDATE() BETWEEN date(finicial) AND date(ffinal) )\n" +
                            "ORDER BY turnos.id DESC;";
                }
                if(opc == 1){
                    
          if(idUsers.isEmpty()){
                    consul = "SELECT  turnos.id,usuarios.nombre,turnos.finicial,turnos.ffinal\n" +
                    "FROM turnos\n" +
                    "INNER JOIN usuarios\n" +
                    "ON turnos.idusuario = usuarios.id AND (date(turnos.finicial) >= '"+fech1+"' AND date(turnos.finicial) <= '"+fech2+"') \n" +
                    "ORDER BY turnos.id DESC;";
          }else{
             consul = "SELECT  turnos.id,usuarios.nombre,turnos.finicial,turnos.ffinal\n" +
                    "FROM turnos\n" +
                    "INNER JOIN usuarios\n" +
                    "ON turnos.idusuario = usuarios.id AND turnos.idusuario = '"+idUsers+"' AND (date(turnos.finicial) >= '"+fech1+"' AND date(turnos.finicial) <= '"+fech2+"') \n" +
                    "ORDER BY turnos.id DESC;";
          }   
          }
                 //consul = "SELECT id, nombre from ambulantes WHERE id LIKE '"+var+"%'  OR nombre LIKE '"+var+"%' ORDER BY id";
                        modelo.addColumn("#Turno");       
                        modelo.addColumn("Cajero");
                        modelo.addColumn("Inicio");
                        modelo.addColumn("Finalizado");

                jTable2.setModel(modelo);
                TableColumnModel columnModel = jTable2.getColumnModel();
              jTable2.getColumnModel().getColumn(0).setPreferredWidth(80);
                jTable2.getColumnModel().getColumn(0).setMaxWidth(150);
                jTable2.getColumnModel().getColumn(0).setMinWidth(50);

                 jTable2.getColumnModel().getColumn(1).setPreferredWidth(180);
                jTable2.getColumnModel().getColumn(1).setMaxWidth(250);
                jTable2.getColumnModel().getColumn(1).setMinWidth(180);

                String datos[] =  new String[4];//tenia 4
                Statement st = null;
                ResultSet rs = null;
                try {
                    st = cn.createStatement();
                    rs = st.executeQuery(consul);

                    while(rs.next()){
                        datos[0] =rs.getString(1);
                        datos[1] = rs.getString(2);
                        datos[2] = rs.getString(3);
                        datos[3] = rs.getString(4);
                        modelo.addRow(datos);
                    }
                    jTable2.setModel(modelo);
                } catch (SQLException ex) {
                    Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                     try {
                            if(rs != null) rs.close();              
                            if(st != null) st.close();                
                            if(cn !=null) cn.close();
                     } catch (SQLException ex) {
                     }
                 }
    }//@endgetProductsOthers
        
    private void llenacombCajeros(){
            Connection cn = con2.conexion();
            idCajeros.clear();
            jCmbBCajeros.removeAllItems();
            jCmbBCajeros.addItem("Todos");
            
            jCmBoxIdCancel.removeAllItems();
            jCmBoxIdCancel.addItem("Todos"); 
            
            String consul = "SELECT id, nombre from usuarios WHERE id > 0 ORDER BY nombre";
            Statement st = null;
            ResultSet rs = null;
            try {
                st = cn.createStatement();
                rs = st.executeQuery(consul);
                while (rs.next()) {
                    idCajeros.add(rs.getString(1));
                    jCmbBCajeros.addItem(rs.getString(2));
                    jCmBoxIdCancel.addItem(rs.getString(2));
                }
            } catch (SQLException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (st != null) {
                        st.close();
                    }
                    if (cn != null) {
                        cn.close();
                    }
                } catch (SQLException ex) {
                    System.err.println(ex.getMessage());
                }
            }
    }
    
    // obtener cada lapso de semanas ingresos
         void getIntervalIngresos(int opc, String idUsers,String fech1,String fech2){
                Connection cn = con2.conexion();
                DefaultTableModel modelo = new DefaultTableModel()
                { 
                    @Override
                    public boolean isCellEditable (int fila, int columna) {
                        return false;
                    }
                };
                String consul="";
                if(opc == 0){//opcion todas las areas lapso sem
                    consul="(SELECT pagos_areasdet.idTicket,pagos_areas.fecha,pagos_areas.hora,rubrospago.descripcion,areas.nombre,pagos_areasdet.importe\n" +
                        "FROM pagos_areas\n" +
                        "INNER JOIN areas\n" +
                        "ON areas.id = pagos_areas.idArea AND pagos_areas.idCancelacion = 0 AND (pagos_areas.fecha >= '"+fech1+"' AND pagos_areas.fecha <= '"+fech2+"')\n" +
                        "INNER JOIN pagos_areasdet\n" +
                        "ON pagos_areas.id = pagos_areasdet.idTicket -- AND pagos_ambdet.idRubroPago = 8\n" +
                        "INNER JOIN rubrospago\n" +
                        "on pagos_areasdet.idRubroPago = rubrospago.id	\n" +
                        "ORDER BY pagos_areas.id)\n" +
                        "UNION\n" +
                        "(SELECT pagos_ambdet.idTicket,pagos_amb.fecha,pagos_amb.hora,rubrospago.descripcion,ambulantes.nombre,(pagos_ambdet.importe - pagos_ambdet.descuento) AS totin\n" +
                        "FROM pagos_amb\n" +
                        "INNER JOIN ambulantes\n" +
                        "ON ambulantes.id = pagos_amb.idAmb AND pagos_amb.idCancelacion = 0 AND (pagos_amb.fecha >= '"+fech1+"' AND pagos_amb.fecha <= '"+fech2+"')\n" +
                        "INNER JOIN pagos_ambdet\n" +
                        "ON pagos_amb.id = pagos_ambdet.idTicket -- AND pagos_ambdet.idRubroPago = 8\n" +
                        "INNER JOIN rubrospago\n" +
                        "on pagos_ambdet.idRubropago = rubrospago.id	\n" +
                        "ORDER BY pagos_amb.id)\n" +
                        "UNION\n" +
                        "(SELECT pagos_carg.id,pagos_carg.fecha,pagos_carg.hora,rubrospago.descripcion,cargadores.nombre,pagos_carg.total\n" +
                        "FROM pagos_carg\n" +
                        "INNER JOIN cargadores\n" +
                        "ON cargadores.id = pagos_carg.idcarg AND pagos_carg.idCancelacion = 0 AND (pagos_carg.fecha >= '"+fech1+"' AND pagos_carg.fecha <= '"+fech2+"')\n" +
                        "INNER JOIN pagos_cargdet\n" +
                        "ON pagos_carg.id = pagos_cargdet.idTicket \n" +
                        "INNER JOIN rubrospago\n" +
                        "on pagos_cargdet.idRubropago = rubrospago.id	\n" +
                        "GROUP BY pagos_carg.id ORDER BY pagos_carg.id)\n" +
                        "UNION\n" +
                        "(SELECT pagos_cargrenta.id,pagos_cargrenta.fecha,pagos_cargrenta.hora,'Renta diaria de diablo',cargadores.nombre,pagos_cargrenta.importe\n" +
                        "FROM pagos_cargrenta\n" +
                        "INNER JOIN cargadores\n" +
                        "ON cargadores.id = pagos_cargrenta.idCarg AND pagos_cargrenta.idCancelacion = 0 AND (pagos_cargrenta.fecha >= '"+fech1+"' AND pagos_cargrenta.fecha <= '"+fech2+"')\n" +
                        "ORDER BY pagos_cargrenta.id)\n" +
                        "UNION\n" +
                        "(SELECT pagos_infrac.folio,pagos_infrac.fechapag,pagos_infrac.horapag,\"Pago Infraccion\",pagos_infrac.quienpaga,\n" +
                        "	IF(pagos_infrac.descuento IS NULL, pagos_infrac.monto, pagos_infrac.monto - pagos_infrac.descuento )  AS totInfrac\n" +
                        "FROM pagos_infrac\n" +
                        "LEFT OUTER JOIN pagos_infraccancel\n" +
                        "ON pagos_infraccancel.idFolio = pagos_infrac.folio WHERE pagos_infraccancel.idFolio IS null AND (pagos_infrac.fechapag >= '"+fech1+"' AND pagos_infrac.fechapag <= '"+fech2+"')\n" +
                        ")\n" +
                        "UNION\n" +
                        "(SELECT otros_venta.id,DATE_FORMAT(otros_venta.fecha, \"%d-%m-%Y\") AS fr,DATE_FORMAT(otros_venta.hora, \"%H : %i\") AS hor,\n" +
"otros_catalogo.descrip,\n" +
                            "IF(otros_venta.tipoPersona = 0, (SELECT ambulantes.nombre FROM ambulantes WHERE ambulantes.id = otros_venta.idPersona ) ,IF(otros_venta.tipoPersona = 1,(SELECT cargadores.nombre FROM cargadores WHERE cargadores.id = otros_venta.idPersona ), IF(otros_venta.tipoPersona = 2,(SELECT clientes.nombre from clientes WHERE clientes.id = otros_venta.idPersona),'NADON') ) ) AS namquees,\n" +
                        " TRUNCATE( (otros_ventadet.cant * otros_ventadet.precio),2) AS totCarg\n" +
                "FROM otros_venta\n" +
"INNER JOIN otros_ventadet\n" +
"ON otros_venta.id = otros_ventadet.idVenta AND otros_venta.idCancelacion = 0 AND (otros_venta.fecha >= '"+fech1+"' AND otros_venta.fecha <= '"+fech2+"')\n" +
"INNER JOIN otros_catalogo\n" +
"ON otros_catalogo.id = otros_ventadet.idProd\n" +
"INNER JOIN otros_rubros\n" +
"ON otros_rubros.id = otros_catalogo.idrubro \n" +
");";
                }
                
                if(opc == 1){// solo areas
      if(idUsers.isEmpty()){
                    consul ="SELECT pagos_areasdet.idTicket,pagos_areas.fecha,pagos_areas.hora,rubrospago.descripcion,areas.nombre,semanas.semana,usuarios.nombre,pagos_areasdet.importe\n" +
                        "FROM pagos_areas\n" +
                        "INNER JOIN turnos ON pagos_areas.idTurno = turnos.id\n" +
                        "INNER JOIN usuarios ON turnos.idusuario = usuarios.id\n" +
                        "INNER JOIN areas\n" +
                        "ON areas.id = pagos_areas.idArea AND pagos_areas.idCancelacion = 0 AND (pagos_areas.fecha >= '"+fech1+"' AND pagos_areas.fecha <= '"+fech2+"') \n" +
                        "INNER JOIN pagos_areasdet\n" +
                        "ON pagos_areas.id = pagos_areasdet.idTicket -- AND pagos_ambdet.idRubroPago = 8\n" +
                        "INNER JOIN rubrospago\n" +
                        "on pagos_areasdet.idRubroPago = rubrospago.id\n" +
                        "INNER JOIN semanas\n" +
                        "ON semanas.id = pagos_areasdet.idSemana\n" +
                        "ORDER BY pagos_areas.id;";
                    }else{
                    consul="SELECT pagos_areasdet.idTicket,pagos_areas.fecha,pagos_areas.hora,rubrospago.descripcion,areas.nombre,semanas.semana,usuarios.nombre,pagos_areasdet.importe\n" +
                        "FROM pagos_areas\n" +
                        "INNER JOIN turnos ON pagos_areas.idTurno = turnos.id\n" +
                        "INNER JOIN usuarios ON turnos.idusuario = usuarios.id\n" +
                        "INNER JOIN areas\n" +
                        "ON areas.id = pagos_areas.idArea AND pagos_areas.idCancelacion = 0 AND (pagos_areas.fecha >= '"+fech1+"' AND pagos_areas.fecha <= '"+fech2+"')\n" +
                        "INNER JOIN pagos_areasdet\n" +
                        "ON pagos_areas.id = pagos_areasdet.idTicket \n" +
                        "INNER JOIN rubrospago\n" +
                        "on pagos_areasdet.idRubroPago = rubrospago.id AND pagos_areasdet.idRubroPago = '"+idUsers+"' \n" +
                        "INNER JOIN semanas\n" +
                        "ON semanas.id = pagos_areasdet.idSemana\n" +
                        "ORDER BY pagos_areas.id;";
                    }
                }
                if(opc == 2){//pagos de ambulantes
      if(idUsers.isEmpty()){
                    consul = "SELECT pagos_ambdet.idTicket,pagos_amb.fecha,pagos_amb.hora,rubrospago.descripcion,ambulantes.nombre,(pagos_ambdet.importe - pagos_ambdet.descuento) AS detallon\n" +
                    "FROM pagos_amb\n" +
                    "INNER JOIN ambulantes\n" +
                    "ON ambulantes.id = pagos_amb.idAmb AND pagos_amb.idCancelacion = 0 AND (pagos_amb.fecha >= '"+fech1+"' AND pagos_amb.fecha <= '"+fech2+"')\n" +
                    "INNER JOIN pagos_ambdet\n" +
                    "ON pagos_amb.id = pagos_ambdet.idTicket -- AND pagos_ambdet.idRubroPago = 8\n" +
                    "INNER JOIN rubrospago\n" +
                    "on pagos_ambdet.idRubropago = rubrospago.id	\n" +
                    "ORDER BY pagos_amb.id;";
      }else{
          if(idUsers.equals("8")){
                    consul = "SELECT pagos_ambdet.idTicket,pagos_amb.fecha,pagos_amb.hora,rubrospago.descripcion,ambulantes.nombre,(pagos_ambdet.importe - pagos_ambdet.descuento) AS detallon\n" +
                    "FROM pagos_amb\n" +
                    "INNER JOIN ambulantes\n" +
                    "ON ambulantes.id = pagos_amb.idAmb AND pagos_amb.idCancelacion = 0 AND (pagos_amb.fecha >= '"+fech1+"' AND pagos_amb.fecha <= '"+fech2+"')\n" +
                    "INNER JOIN pagos_ambdet\n" +
                    "ON pagos_amb.id = pagos_ambdet.idTicket  AND pagos_ambdet.idRubropago >= '"+idUsers+"'\n" +
                    "INNER JOIN rubrospago\n" +
                    "on pagos_ambdet.idRubropago = rubrospago.id	\n" +
                    "ORDER BY pagos_amb.id;";
          }else{
          consul = "SELECT pagos_ambdet.idTicket,pagos_amb.fecha,pagos_amb.hora,rubrospago.descripcion,ambulantes.nombre,(pagos_ambdet.importe - pagos_ambdet.descuento) AS detallon\n" +
                    "FROM pagos_amb\n" +
                    "INNER JOIN ambulantes\n" +
                    "ON ambulantes.id = pagos_amb.idAmb AND pagos_amb.idCancelacion = 0 AND (pagos_amb.fecha >= '"+fech1+"' AND pagos_amb.fecha <= '"+fech2+"')\n" +
                    "INNER JOIN pagos_ambdet\n" +
                    "ON pagos_amb.id = pagos_ambdet.idTicket  AND pagos_ambdet.idRubropago = '"+idUsers+"'\n" +
                    "INNER JOIN rubrospago\n" +
                    "on pagos_ambdet.idRubropago = rubrospago.id \n" +
                    "ORDER BY pagos_amb.id;";
          }
      }
                }
                if(opc == 3){//pagos de cargadores
      if(idUsers.isEmpty()){
                    consul =
"(SELECT pagos_carg.id,pagos_carg.fecha,pagos_carg.hora,rubrospago.descripcion,cargadores.nombre,pagos_carg.total \n" +//pagos_carg.total (pagos_cargdet.importe - pagos_cargdet.descuento) AS totil
                "FROM pagos_carg\n" +
                "INNER JOIN cargadores\n" +
                "ON cargadores.id = pagos_carg.idcarg AND pagos_carg.idCancelacion = 0 AND (pagos_carg.fecha >= '"+fech1+"' AND pagos_carg.fecha <= '"+fech2+"')\n" +
                "INNER JOIN pagos_cargdet\n" +
                "ON pagos_carg.id = pagos_cargdet.idTicket \n" +// AND (pagos_cargdet.idRubroPago >= 8 AND pagos_cargdet.idRubroPago <= 11)
                "INNER JOIN rubrospago\n" +
                "ON pagos_cargdet.idRubropago = rubrospago.id \n" +
                "GROUP BY pagos_carg.id "
             + "ORDER BY pagos_carg.id)\n" +
                "UNION\n" +
                "(SELECT pagos_cargrenta.id,pagos_cargrenta.fecha,pagos_cargrenta.hora,'Renta diaria de diablo',cargadores.nombre,pagos_cargrenta.importe\n" +
                "FROM pagos_cargrenta\n" +
                "INNER JOIN cargadores\n" +
                "ON cargadores.id = pagos_cargrenta.idCarg AND pagos_cargrenta.idCancelacion = 0 AND (pagos_cargrenta.fecha >= '"+fech1+"' AND pagos_cargrenta.fecha <= '"+fech2+"')\n" +
                "ORDER BY pagos_cargrenta.id);";
      }else{
           if(idUsers.equals("8")){
           consul = "SELECT pagos_cargdet.idTicket,pagos_carg.fecha,pagos_carg.hora,rubrospago.descripcion,cargadores.nombre,(pagos_cargdet.importe - pagos_cargdet.descuento) AS totil\n" +
                "FROM pagos_carg\n" +
                "INNER JOIN cargadores\n" +
                "ON cargadores.id = pagos_carg.idcarg AND pagos_carg.idCancelacion = 0 AND (pagos_carg.fecha >= '"+fech1+"' AND pagos_carg.fecha <= '"+fech2+"')\n" +
                "INNER JOIN pagos_cargdet\n" +
                "ON pagos_carg.id = pagos_cargdet.idTicket  AND (pagos_cargdet.idRubroPago >= 8 AND pagos_cargdet.idRubroPago <= 10)\n" +
                "INNER JOIN rubrospago\n" +
                "on pagos_cargdet.idRubropago = rubrospago.id	\n" +
                "ORDER BY pagos_carg.id; ";
           }
            if(idUsers.equals("11")){
                consul = "SELECT pagos_cargdet.idTicket,pagos_carg.fecha,pagos_carg.hora,rubrospago.descripcion,cargadores.nombre,(pagos_cargdet.importe - pagos_cargdet.descuento) AS totil\n" +
                "FROM pagos_carg\n" +
                "INNER JOIN cargadores\n" +
                "ON cargadores.id = pagos_carg.idcarg AND pagos_carg.idCancelacion = 0 AND (pagos_carg.fecha >= '"+fech1+"' AND pagos_carg.fecha <= '"+fech2+"')\n" +
                "INNER JOIN pagos_cargdet\n" +
                "ON pagos_carg.id = pagos_cargdet.idTicket  AND pagos_cargdet.idRubroPago = '"+idUsers+"' \n" +
                "INNER JOIN rubrospago\n" +
                "on pagos_cargdet.idRubropago = rubrospago.id \n" +
                "ORDER BY pagos_carg.id; ";
            }
            if(idUsers.equals("12")){
                consul = "SELECT pagos_cargrenta.id,pagos_cargrenta.fecha,pagos_cargrenta.hora,'Renta diaria de diablo',cargadores.nombre,pagos_cargrenta.importe\n" +
                "FROM pagos_cargrenta\n" +
                "INNER JOIN cargadores\n" +
                "ON cargadores.id = pagos_cargrenta.idCarg AND pagos_cargrenta.idCancelacion = 0 AND (pagos_cargrenta.fecha >= '"+fech1+"' AND pagos_cargrenta.fecha <= '"+fech2+"')\n" +
                "ORDER BY pagos_cargrenta.id;";
            }
            
      }
                }
                if(opc == 4){//pagos de infracciones
                    consul = "SELECT pagos_infrac.folio,pagos_infrac.fechapag,pagos_infrac.horapag,\"Pago Infraccion\",pagos_infrac.quienpaga,\n" +
                "IF(pagos_infrac.descuento IS NULL, pagos_infrac.monto, pagos_infrac.monto - pagos_infrac.descuento )  AS totInfrac\n" +
                "FROM pagos_infrac\n" +
                "LEFT OUTER JOIN pagos_infraccancel\n" +
                "ON pagos_infraccancel.idFolio = pagos_infrac.folio WHERE pagos_infraccancel.idFolio IS null AND (pagos_infrac.fechapag >= '"+fech1+"' AND pagos_infrac.fechapag <= '"+fech2+"') \n" +
                ";";
                }
                if(opc == 5){//pagos de otros venta
if(idUsers.isEmpty()){
consul = "SELECT otros_venta.id,DATE_FORMAT(otros_venta.fecha, \"%d-%m-%Y\") AS hor,DATE_FORMAT(otros_venta.hora, \"%H : %i\") AS hor,\n" +
                "otros_catalogo.descrip,\n" +
                "IF(otros_venta.tipoPersona = 0, (SELECT ambulantes.nombre FROM ambulantes WHERE ambulantes.id = otros_venta.idPersona ) ,IF(otros_venta.tipoPersona = 1,(SELECT cargadores.nombre FROM cargadores WHERE cargadores.id = otros_venta.idPersona ), IF(otros_venta.tipoPersona = 2,(SELECT clientes.nombre from clientes WHERE clientes.id = otros_venta.idPersona),'NADON') ) ) AS namquees,\n" +
                "TRUNCATE( (otros_ventadet.cant * otros_ventadet.precio),2) AS totCarg\n" +
                "FROM otros_venta\n" +
"INNER JOIN otros_ventadet\n" +
"ON otros_venta.id = otros_ventadet.idVenta AND otros_venta.idCancelacion = 0 AND (otros_venta.fecha >= '"+fech1+"' AND otros_venta.fecha <= '"+fech2+"')\n" +
"INNER JOIN otros_catalogo\n" +
"ON otros_catalogo.id = otros_ventadet.idProd\n" +
"INNER JOIN otros_rubros\n" +
"ON otros_rubros.id = otros_catalogo.idrubro \n" +
";";
        }else{

consul="SELECT otros_venta.id,DATE_FORMAT(otros_venta.fecha, \"%d-%m-%Y\") AS hor1,DATE_FORMAT(otros_venta.hora, \"%H : %i\") AS hor,\n" +
"otros_catalogo.descrip,\n" +
"IF(otros_venta.tipoPersona = 0, (SELECT ambulantes.nombre FROM ambulantes WHERE ambulantes.id = otros_venta.idPersona ) ,IF(otros_venta.tipoPersona = 1,(SELECT cargadores.nombre FROM cargadores WHERE cargadores.id = otros_venta.idPersona ), IF(otros_venta.tipoPersona = 2,(SELECT clientes.nombre from clientes WHERE clientes.id = otros_venta.idPersona),'NADON') ) ) AS namquees,\n" +
"TRUNCATE( (otros_ventadet.cant * otros_ventadet.precio),2) AS totCarg\n" +
"FROM otros_venta\n" +
"INNER JOIN otros_ventadet\n" +
"ON otros_venta.id = otros_ventadet.idVenta AND otros_venta.idCancelacion = 0 AND (otros_venta.fecha >= '"+fech1+"' AND otros_venta.fecha <= '"+fech2+"')\n" +
"INNER JOIN otros_catalogo\n" +
"ON otros_catalogo.id = otros_ventadet.idProd\n" +
"INNER JOIN otros_rubros\n" +
"ON otros_rubros.id = otros_catalogo.idrubro  AND otros_rubros.id = '"+idUsers+"'\n" +
";";
}
                }
                 //consul = "SELECT id, nombre from ambulantes WHERE id LIKE '"+var+"%'  OR nombre LIKE '"+var+"%' ORDER BY id";
                 if(opc == 1){
                        modelo.addColumn("#Ticket");       
                        modelo.addColumn("Fecha");
                        modelo.addColumn("Hora");
                        modelo.addColumn("Rubro");
                        modelo.addColumn("Area");
                        modelo.addColumn("Semana");
                        modelo.addColumn("Cajero(a)");
                        modelo.addColumn("Total");
                 } else{
                 modelo.addColumn("#Ticket");       
                        modelo.addColumn("Fecha");
                        modelo.addColumn("Hora");
                        modelo.addColumn("Rubro");
                        modelo.addColumn("Nombre");
                        modelo.addColumn("Total");
                 }
                jTabViewIngresosAll.setModel(modelo);
                TableColumnModel columnModel = jTabViewIngresosAll.getColumnModel();
              jTabViewIngresosAll.getColumnModel().getColumn(0).setPreferredWidth(80);
                jTabViewIngresosAll.getColumnModel().getColumn(0).setMaxWidth(150);
                jTabViewIngresosAll.getColumnModel().getColumn(0).setMinWidth(50);

                 jTabViewIngresosAll.getColumnModel().getColumn(1).setPreferredWidth(80);
                jTabViewIngresosAll.getColumnModel().getColumn(1).setMaxWidth(150);
                jTabViewIngresosAll.getColumnModel().getColumn(1).setMinWidth(50);

                 jTabViewIngresosAll.getColumnModel().getColumn(2).setPreferredWidth(80);
                jTabViewIngresosAll.getColumnModel().getColumn(2).setMaxWidth(150);
                jTabViewIngresosAll.getColumnModel().getColumn(2).setMinWidth(50);
                
                  jTabViewIngresosAll.getColumnModel().getColumn(5).setPreferredWidth(80);
                jTabViewIngresosAll.getColumnModel().getColumn(5).setMaxWidth(150);
                jTabViewIngresosAll.getColumnModel().getColumn(5).setMinWidth(50);
                
                String datos[] =  new String[8];//tenia 4
                Statement st = null;
                ResultSet rs = null;
                try {
                    st = cn.createStatement();
                    rs = st.executeQuery(consul);

                    while(rs.next()){
                        datos[0] =rs.getString(1);
                        datos[1] = rs.getString(2);
                        datos[2] = rs.getString(3);
                        datos[3] = rs.getString(4);
                        datos[4] = rs.getString(5);
                        datos[5] = rs.getString(6);
                        if(opc == 1){
                            datos[6] = rs.getString(7);
                            datos[7] = rs.getString(8);
                        }
                        
                        modelo.addRow(datos);
                    }
                    jTabViewIngresosAll.setModel(modelo);
                } catch (SQLException ex) {
                    Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                     try {
                            if(rs != null) rs.close();              
                            if(st != null) st.close();                
                            if(cn !=null) cn.close();
                     } catch (SQLException ex) {
                     }
                 }
    }//@endgetProductsOthers   
 
    
private String sumCorteCaj(String idTurnon){
              String most = "";
              BigDecimal totAreas = new BigDecimal(func.totalturno(0, idTurnon));
              BigDecimal totAmbus = new BigDecimal(func.totalturno(1, idTurnon));
              BigDecimal totCarg= new BigDecimal(func.totalturno(2, idTurnon));
              BigDecimal totCargRent = new BigDecimal(func.totalturno(3, idTurnon));
              BigDecimal totInfrc = new BigDecimal(func.totalturno(4, idTurnon));
              BigDecimal totOthsVenta = new BigDecimal(func.totalturno(5, idTurnon));
return most = func.getSum(totAreas, func.getSum(totAmbus, func.getSum(totCarg, func.getSum(totCargRent, func.getSum(totInfrc, totOthsVenta))))).toString();
          }
    
public void cragaDinRubros(int opc){
switch(opc){
    case 0://todos deshabilitamos jComboRubros
        jCBoxEsRubroDet.setEnabled(false);
    break;
    case 1://areas
        jCBoxEsRubroDet.setEnabled(true);
        jCBoxEsRubroDet.removeAllItems();
        jCBoxEsRubroDet.addItem("Todos");
        for (int i = 0; i < arrAreas.length; i++) {
            jCBoxEsRubroDet.addItem(arrAreas[i]);
        }
    break;
    case 2://Ambulantes
        jCBoxEsRubroDet.setEnabled(true);
        jCBoxEsRubroDet.removeAllItems();
        jCBoxEsRubroDet.addItem("Todos");
        for (int i = 0; i < arrAmbus.length; i++) {
            jCBoxEsRubroDet.addItem(arrAmbus[i]);
        }
    break;
    case 3://Cargadores
        jCBoxEsRubroDet.setEnabled(true);
        jCBoxEsRubroDet.removeAllItems();
        jCBoxEsRubroDet.addItem("Todos");
        for (int i = 0; i < arrCargad.length; i++) {
            jCBoxEsRubroDet.addItem(arrCargad[i]);
        }
    break;
    case 4://Infracciones
        jCBoxEsRubroDet.setEnabled(true);
        jCBoxEsRubroDet.removeAllItems();
        jCBoxEsRubroDet.addItem("Todos");
    break;
    case 5://Otros Varios
        jCBoxEsRubroDet.setEnabled(true);
        jCBoxEsRubroDet.removeAllItems();
        jCBoxEsRubroDet.addItem("Todos");
        for (int i = 0; i < arrOtros.length; i++) {
            jCBoxEsRubroDet.addItem(arrOtros[i]);
        }
    break;
}; 
}

//Llena combo de egresos/gastos en general
  private void llenacombEgresos(){
            Connection cn = con2.conexion();
            idGastosEg.clear();
            jCmBoxEgresos.removeAllItems();
            jCmBoxEgresos.addItem("Todos");
     
            String consul = "SELECT id, concepto from rubroscaja WHERE tipo = 'E' ORDER BY id";
            Statement st = null;
            ResultSet rs = null;
            try {
                st = cn.createStatement();
                rs = st.executeQuery(consul);
                while (rs.next()) {
                    idGastosEg.add(rs.getString(1));
                    jCmBoxEgresos.addItem(rs.getString(2));
                }
            } catch (SQLException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (st != null) {
                        st.close();
                    }
                    if (cn != null) {
                        cn.close();
                    }
                } catch (SQLException ex) {
                    System.err.println(ex.getMessage());
                }
            }
    }
  
     // obtener cada lapso de semanas ingresos
         void getIntervalEgresos(int opc, String fech1,String fech2){
                Connection cn = con2.conexion();
                DefaultTableModel modelo = new DefaultTableModel()
                { 
                    @Override
                    public boolean isCellEditable (int fila, int columna) {
                        return false;
                    }
                };
                String consul="";
                if(opc == 0){//TodosRubros + lapso fechas
           consul ="SELECT gastos_caja.id,DATE_FORMAT(gastos_caja.fecha, \"%d-%m-%Y\") AS fec,DATE_FORMAT(gastos_caja.hora, \"%H : %i\") AS hor,\n" +
                        "rubroscaja.concepto as RUBRO,gastos_caja.concepto,usuarios.nombre,gastos_caja.monto,gastos_caja.idTurno\n" +
                        "FROM central.gastos_caja\n" +
                        "INNER JOIN central.rubroscaja\n" +
                        "ON gastos_caja.idRubrocaja = rubroscaja.id AND gastos_caja.fecha >= date('"+fech1+"') AND gastos_caja.fecha <= date('"+fech2+"')\n" +
                        "INNER JOIN central.turnos ON turnos.id = gastos_caja.idTurno\n" +
                        "INNER JOIN central.usuarios ON turnos.idusuario = usuarios.id\n" +
                        "order by fecha;";
                }
                if(opc > 0 && opc < 10){
                    consul = "SELECT gastos_caja.id,DATE_FORMAT(gastos_caja.fecha, \"%d-%m-%Y\") AS fec,DATE_FORMAT(gastos_caja.hora, \"%H : %i\") AS hor,\n" +
                        "rubroscaja.concepto as RUBRO,gastos_caja.concepto,usuarios.nombre,gastos_caja.monto,gastos_caja.idTurno\n" +
                        "FROM central.gastos_caja\n" +
                        "INNER JOIN central.rubroscaja\n" +
                        "ON gastos_caja.idRubrocaja = rubroscaja.id AND gastos_caja.idRubrocaja = "+opc+"  AND gastos_caja.fecha >= date('"+fech1+"') AND gastos_caja.fecha <= date('"+fech2+"')\n" +
                        "INNER JOIN central.turnos ON turnos.id = gastos_caja.idTurno\n" +
                        "INNER JOIN central.usuarios ON turnos.idusuario = usuarios.id\n" +
                        "order by fecha;";
                }
   
                 if(opc == 10){
                    consul = "SELECT gastos_caja.id,DATE_FORMAT(gastos_caja.fecha, \"%d-%m-%Y\") AS fec,DATE_FORMAT(gastos_caja.hora, \"%H : %i\") AS hor,\n" +
                        "rubroscaja.concepto as RUBRO,gastos_caja.concepto,usuarios.nombre,gastos_caja.monto,gastos_caja.idTurno\n" +
                        "FROM central.gastos_caja\n" +
                        "INNER JOIN central.rubroscaja\n" +
                        "ON gastos_caja.idRubrocaja = rubroscaja.id AND gastos_caja.fecha = date('"+fech1+"')\n" +
                        "INNER JOIN central.turnos ON turnos.id = gastos_caja.idTurno\n" +
                        "INNER JOIN central.usuarios ON turnos.idusuario = usuarios.id\n" +
                        "order by fecha;";
                }  
                  if(opc > 10 && opc < 20){
                      int vari = opc -10;
//                      System.out.println("vari is : "+vari);
                    consul = "SELECT gastos_caja.id,DATE_FORMAT(gastos_caja.fecha, \"%d-%m-%Y\") AS fec,DATE_FORMAT(gastos_caja.hora, \"%H : %i\") AS hor,\n" +
                        "rubroscaja.concepto as RUBRO,gastos_caja.concepto,usuarios.nombre,gastos_caja.monto,gastos_caja.idTurno\n" +
                        "FROM central.gastos_caja\n" +
                        "INNER JOIN central.rubroscaja\n" +
                        "ON gastos_caja.idRubrocaja = rubroscaja.id AND gastos_caja.idRubrocaja = "+vari+" AND gastos_caja.fecha = date('"+fech1+"')\n" +
                        "INNER JOIN central.turnos ON turnos.id = gastos_caja.idTurno\n" +
                        "INNER JOIN central.usuarios ON turnos.idusuario = usuarios.id\n" +
                        "order by fecha;";
                }   
                 
                 //consul = "SELECT id, nombre from ambulantes WHERE id LIKE '"+var+"%'  OR nombre LIKE '"+var+"%' ORDER BY id";
                        modelo.addColumn("Folio");       
                        modelo.addColumn("Fecha");
                        modelo.addColumn("Hora");
                        modelo.addColumn("Rubro");
                        modelo.addColumn("Concepto");
                        modelo.addColumn("Nombre");
                        modelo.addColumn("Monto");
                        modelo.addColumn("Turno");

                jTable6.setModel(modelo);
                TableColumnModel columnModel = jTable6.getColumnModel();
              jTable6.getColumnModel().getColumn(0).setPreferredWidth(80);
                jTable6.getColumnModel().getColumn(0).setMaxWidth(150);
                jTable6.getColumnModel().getColumn(0).setMinWidth(50);

                 jTable6.getColumnModel().getColumn(1).setPreferredWidth(80);
                jTable6.getColumnModel().getColumn(1).setMaxWidth(150);
                jTable6.getColumnModel().getColumn(1).setMinWidth(50);

                 jTable6.getColumnModel().getColumn(2).setPreferredWidth(80);
                jTable6.getColumnModel().getColumn(2).setMaxWidth(150);
                jTable6.getColumnModel().getColumn(2).setMinWidth(50);
                
                  jTable6.getColumnModel().getColumn(5).setPreferredWidth(80);
                jTable6.getColumnModel().getColumn(5).setMaxWidth(150);
                jTable6.getColumnModel().getColumn(5).setMinWidth(50);
                
                String datos[] =  new String[8];//tenia 4
                Statement st = null;
                ResultSet rs = null;
                try {
                    st = cn.createStatement();
                    rs = st.executeQuery(consul);

                    while(rs.next()){
                        datos[0] =rs.getString(1);
                        datos[1] = rs.getString(2);
                        datos[2] = rs.getString(3);
                        datos[3] = rs.getString(4);
                        datos[4] = rs.getString(5);
                        datos[5] = rs.getString(6);
                        datos[6] = rs.getString(7);
                        datos[7] = rs.getString(8);
                        modelo.addRow(datos);
                    }
                    jTable6.setModel(modelo);
                } catch (SQLException ex) {
                    Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                     try {
                            if(rs != null) rs.close();              
                            if(st != null) st.close();                
                            if(cn !=null) cn.close();
                     } catch (SQLException ex) {
                     }
                 }
    }//@end getIntervalEgresos 
  
         
            public String getTOTALEGRESOS(int opc,String fech, String fech1){
            Connection cn = con2.conexion();
            String totol = "";
            String sql = "";
             if(opc == 0){//TodosRubros + lapso fechas
                    sql ="SELECT SUM(gastos_caja.monto)\n" +
                    "FROM central.gastos_caja\n" +
                    "WHERE gastos_caja.fecha >= date('"+fech+"') AND gastos_caja.fecha <= '"+fech1+"'\n" +
                    ";";
                }
             if(opc > 0 && opc < 10){//IdRubros + semanonas
                    sql ="SELECT SUM(gastos_caja.monto)\n" +
                    "FROM central.gastos_caja\n" +
                    "WHERE gastos_caja.idRubrocaja = "+opc+" AND gastos_caja.fecha >= date('"+fech+"') AND gastos_caja.fecha <= '"+fech1+"'\n" +
                    ";";
                }
             if(opc == 10){
                 sql = "SELECT SUM(gastos_caja.monto)\n" +
                    "FROM central.gastos_caja\n" +
                    "WHERE gastos_caja.fecha = date('"+fech+"')\n" +
                    ";";
             }
              if(opc > 10 && opc < 20 ){
                  int varo = opc-10;
                 sql = "SELECT SUM(gastos_caja.monto)\n" +
                    "FROM central.gastos_caja\n" +
                    "WHERE gastos_caja.idRubrocaja = "+varo+" AND gastos_caja.fecha = date('"+fech+"')\n" +
                    ";";
             }
             
            Statement st = null;
            ResultSet rs= null;
            try {
                st = cn.createStatement();
                rs = st.executeQuery(sql);
                rs.beforeFirst();
                if(rs.next())
                {
                    if(rs.getRow() > 0){
                        totol =rs.getString(1);
                    }else{
                            totol = "0.0.0.0";
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(funciones.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                        try {
                            if(cn != null) cn.close();
                        } catch (SQLException ex) {
                            System.err.println( ex.getMessage() );    
                        }
                    }
           return totol;
    }//@end getTOTALEGRESOS

                 //totalLapsoFechas(int opc,String ribro, String fech1, String fech2)
   private String sumCorteCajFechonas(String fech0,String fech1){
              String most = "";
              BigDecimal totAreas = new BigDecimal(func.totalLapsoFechas(0,"", fech0,fech1));
              BigDecimal totAmbus = new BigDecimal(func.totalLapsoFechas(1,"",fech0,fech1));
              BigDecimal totCarg= new BigDecimal(func.totalLapsoFechas(2,"",fech0,fech1));
              BigDecimal totCargRent = new BigDecimal(func.totalLapsoFechas(3,"", fech0,fech1));
              BigDecimal totInfrc = new BigDecimal(func.totalLapsoFechas(4,"", fech0,fech1));
              BigDecimal totOthsVenta = new BigDecimal(func.totalLapsoFechas(5,"",fech0,fech1));
return most = func.getSum(totAreas, func.getSum(totAmbus, func.getSum(totCarg, func.getSum(totCargRent, func.getSum(totInfrc, totOthsVenta))))).toString();
          }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jCBoxEsIngreso;
    private javax.swing.JComboBox<String> jCBoxEsRubroDet;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JComboBox<String> jCmBoxEgresos;
    private javax.swing.JComboBox<String> jCmBoxIdCancel;
    private javax.swing.JComboBox<String> jCmbBCajeros;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JDialog jDialCalendarMantenim;
    private javax.swing.JDialog jDialFechonas;
    private javax.swing.JLabel jLabLetrero;
    private javax.swing.JLabel jLabTOTEGRESOS;
    private javax.swing.JLabel jLabTurnCancel;
    private javax.swing.JLabel jLabViewFolio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioEspedific;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTable jTabDetailTurnos;
    private javax.swing.JTable jTabViewIngresosAll;
    private javax.swing.JTable jTabViewTurnos;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable6;
    // End of variables declaration//GEN-END:variables
}
